steps:
  - task: NodeTool@0
    displayName: 'Use Node 12.x'
    inputs:
      versionSpec: 12.x

  - task: CacheBeta@1
    displayName: Cache NPM packages
    inputs:
      key: npm | $(Agent.OS) | package-lock.json
      path: $(npm_config_cache)
      restoreKeys: npm | $(Agent.OS) | package-lock.json

  - task: CacheBeta@1
    displayName: Cache Cypress binary
    inputs:
      key: cypress | $(Agent.OS) | package-lock.json
      path: $(cypress_cache_folder)
      restoreKeys: cypress | $(Agent.OS) | package-lock.json
    
  # - task: Cache@2
  #   displayName: 'Cache npm'
  #   inputs:
  #     key: 'npm | "$(Agent.OS)" | package-lock.json'
  #     restoreKeys: |
  #       npm | "$(Agent.OS)"
  #       npm
  #     path: $(npm_config_cache)

  - script: npm ci
    displayName: 'Install NPM dependencies'

  - script: npm run cy:verify
    displayName: 'Cypress verify'


 - script: |
          npx print-env AGENT
          npx print-env BUILD
          npx print-env SYSTEM
          npm run start:ci:windows &
          npx cypress run --record  --key 05e2cbc4-6e38-4f6b-9c00-3ca618c5038b --parallel --ci-build-id $BUILDID --group "Azure CI"  --browser ${{ parameters.browserType }}
    displayName: 'Run the cypress tests'
    env:
      TERM: xterm
      BUILDID: $(Build.BuildId)
  
  - task: PublishTestResults@2
    displayName: 'Publish the test reports'
    inputs:
      testResultsFiles: '**/reports/junit.*.xml'
    condition: succeededOrFailed()
    continueOnError: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish screenshots when there were issues'
    inputs:
      pathtoPublish: 'cypress/screenshots'
      artifactName: screenshots-${{ parameters.browserType }}
    condition: failed()
    continueOnError: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish videos'
    inputs:
      pathtoPublish: 'cypress/videos'
      artifactName: videos-${{ parameters.browserType }}
    condition: succeededOrFailed()
    continueOnError: true